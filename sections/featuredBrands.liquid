{{ 'featuredLogoBrands.css' | asset_url | stylesheet_tag }}
{{ 'ionicons.min.css' | asset_url | stylesheet_tag }}

{% style %}
.logo-bar--{{ section.id }} {
  opacity: {{ section.settings.logo_opacity | divided_by: 100.0 }};
}
{% endstyle %}
{% if section.settings.divider %}<div class="section--divider">{% endif %}

<div class="logoBrands">
    {% if section.settings.title != blank %}
        <h3 class="sectionTitle">{{ section.settings.title }}</h3>  
    {% endif %}

  <div class="container">

    <div class="carousel">
      <div class="nav nav-left">
        <div class="ion-chevron-left carousel-arrow-icon-left"></div>
      </div>

      <div class="carousel-content">
        <div class="slide slide-1">
          {% if section.blocks.size > 0 %}
          <div class="logo-bar logo-bar--{{ section.id }} logoContainer">
            {% for block in section.blocks %}
              <div class="logo-bar__item" {{ block.shopify_attributes }}>
                {% if block.settings.link != blank %}
                  <a href="{{ block.settings.link }}" class="logo-bar__link">
                {% endif %}
                {% if block.settings.image != blank %}
                  {%- assign img_url = block.settings.image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
                  <img class="logo-bar__image lazyload itemImageContainer"
                      data-src="{{ img_url }}"
                      data-widths="[180, 360, 540, 720]"
                      data-aspectratio="{{ block.settings.image.aspect_ratio }}"
                      data-sizes="auto"
                      alt="{{ block.settings.image.alt }}">
                {% else %}
                  {{ 'logo' | placeholder_svg_tag: 'placeholder-svg' }}
                {% endif %}
                {% if block.settings.link != blank %}
                  </a>
                {% endif %}
              </div>
            {% endfor %}
          </div>
        {% endif %}
        </div>
      </div>

      <div class="nav nav-right">
        <div class="ion-chevron-right carousel-arrow-icon-right"></div>
      </div>
    </div>

  </div>
    
  {% if section.settings.divider %}</div>{% endif %}


</div>
<script async>
    var carousel = document.querySelector('.carousel');
    var carouselContent = document.querySelector('.carousel-content');
    var slides = document.querySelectorAll('.slide');
    var arrayOfSlides = Array.prototype.slice.call(slides);
    var carouselDisplaying;
    var screenSize;
    setScreenSize();
    var lengthOfSlide;

    function addClone() {
    var lastSlide = carouselContent.lastElementChild.cloneNode(true);
    lastSlide.style.left = (-lengthOfSlide) + "px";
    carouselContent.insertBefore(lastSlide, carouselContent.firstChild);
    }
    // addClone();

    function removeClone() {
    var firstSlide = carouselContent.firstElementChild;
    firstSlide.parentNode.removeChild(firstSlide);
    }

    function moveSlidesRight() {
    var slides = document.querySelectorAll('.slide');
    var slidesArray = Array.prototype.slice.call(slides);
    var width = 0;

    slidesArray.forEach(function(el, i){
        el.style.left = width + "px";
        width += lengthOfSlide;
    });
    addClone();
    }
    moveSlidesRight();

    function moveSlidesLeft() {
    var slides = document.querySelectorAll('.slide');
    var slidesArray = Array.prototype.slice.call(slides);
    slidesArray = slidesArray.reverse();
    var maxWidth = (slidesArray.length - 1) * lengthOfSlide;

    slidesArray.forEach(function(el, i){
        maxWidth -= lengthOfSlide;
        el.style.left = maxWidth + "px";
    });
    }

    window.addEventListener('resize', setScreenSize);

    function setScreenSize() {
    if ( window.innerWidth >= 768 ) {
        carouselDisplaying = 8;
    } else if ( window.innerWidth >= 450 ) {
        carouselDisplaying = 3;
    } else {
        carouselDisplaying = 1;
    }
    getScreenSize();
    }

    function getScreenSize() {
    var slides = document.querySelectorAll('.slide');
    var slidesArray = Array.prototype.slice.call(slides);
    lengthOfSlide = ( carousel.offsetWidth  / carouselDisplaying );
    var initialWidth = -lengthOfSlide;
    slidesArray.forEach(function(el) {
        el.style.width = lengthOfSlide + "px";
        el.style.left = initialWidth + "px";
        initialWidth += lengthOfSlide;
    });
    }


    var rightNav = document.querySelector('.nav-right');
    rightNav.addEventListener('click', moveLeft);

    var moving = true;
    function moveRight() {
    if ( moving ) {
        moving = false;
        var lastSlide = carouselContent.lastElementChild;
        lastSlide.parentNode.removeChild(lastSlide);
        carouselContent.insertBefore(lastSlide, carouselContent.firstChild);
        removeClone();
        var firstSlide = carouselContent.firstElementChild;
        firstSlide.addEventListener('transitionend', activateAgain);
        moveSlidesRight();
    }
    }

    function activateAgain() {
    var firstSlide = carouselContent.firstElementChild;
    moving = true;
    firstSlide.removeEventListener('transitionend', activateAgain);
    }

    var leftNav = document.querySelector('.nav-left');
    leftNav.addEventListener('click', moveRight);

    // var moveLeftAgain = true;

    function moveLeft() {
    if ( moving ) {
        moving = false;
        removeClone();
        var firstSlide = carouselContent.firstElementChild;
        firstSlide.addEventListener('transitionend', replaceToEnd);
        moveSlidesLeft();
    }
    }

    function replaceToEnd() {
    var firstSlide = carouselContent.firstElementChild;
    firstSlide.parentNode.removeChild(firstSlide);
    carouselContent.appendChild(firstSlide);
    firstSlide.style.left = ( (arrayOfSlides.length -1) * lengthOfSlide) + "px";
    addClone();
    moving = true;
    firstSlide.removeEventListener('transitionend', replaceToEnd);
    }




    carouselContent.addEventListener('mousedown', seeMovement);

    var initialX;
    var initialPos;
    function seeMovement(e) {
    initialX = e.clientX;
    getInitialPos();
    carouselContent.addEventListener('mousemove', slightMove);
    document.addEventListener('mouseup', moveBasedOnMouse);
    }

    function slightMove(e) {
    if ( moving ) {
        var movingX = e.clientX;
        var difference = initialX - movingX;
        if ( Math.abs(difference) < (lengthOfSlide/4) ) {
        slightMoveSlides(difference);
        }  
    }
    }

    function getInitialPos() {
    var slides = document.querySelectorAll('.slide');
    var slidesArray = Array.prototype.slice.call(slides);
    initialPos = [];
    slidesArray.forEach(function(el){
        var left = Math.floor( parseInt( el.style.left.slice(0, -2 ) ) ); 
        initialPos.push( left );
    });
    }

    function slightMoveSlides(newX) {
    var slides = document.querySelectorAll('.slide');
    var slidesArray = Array.prototype.slice.call(slides);
    slidesArray.forEach(function(el, i){
        var oldLeft = initialPos[i];
        el.style.left = (oldLeft + newX) + "px";
    });
    }

    function moveBasedOnMouse(e) { 
    var finalX = e.clientX;
    if ( initialX - finalX > 0) {
        moveRight();
    } else if ( initialX - finalX < 0 ) {
        moveLeft();
    }
    document.removeEventListener('mouseup', moveBasedOnMouse);
    carouselContent.removeEventListener('mousemove', slightMove);
    }
</script>

{% schema %}
{
  "name": "Brands list",
  "class": "index-section",
  "max_blocks": 1000,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default":"Featured in"
    },
    {
      "type": "range",
      "id": "logo_opacity",
      "label": "Logo opacity",
      "default": 76,
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "%"
    },
    {
      "type": "checkbox",
      "id": "divider",
      "label": "Show section divider",
      "default": false
    }
  ],
  "blocks": [
      {
        "type": "logo_image",
        "name": "Logo",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "url",
            "id": "link",
            "label": "Link",
            "info": "Optional"
          }
        ]
      }
    ],
  "presets": [
    {
      "name": "Brands list",
      "category": "Image",
      "blocks": [
        {
          "type": "logo_image"
        },
        {
          "type": "logo_image"
        },
        {
          "type": "logo_image"
        },
        {
          "type": "logo_image"
        },
        {
          "type": "logo_image"
        }
      ]
    }
  ]
}
{% endschema %}
